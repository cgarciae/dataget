import os
import re
import platform
from six.moves import urllib



OS_SPLITTER = os.sep

def get_progress(filename):
    def progress(count, blockSize, totalSize):

        new = int( count * blockSize * 100 / totalSize )

        if new % 5 == 0 and new != progress.last:
            print("{} {}%".format(filename, new))
            progress.last = new

    progress.last = -1

    return progress

def get_file(file_url, path, filename=None, print_info=True):
    if filename is None:
        filename = file_url.split("/")[-1]

    file_path = os.path.join(path, filename)

    if print_info:
        print("downloading {}".format(filename))

    urllib.request.urlretrieve(file_url, file_path, get_progress(filename))


def maybe_mkdir(path):
    if not os.path.exists(path):
        os.makedirs(path)

    return path

def split_upper(txt):
    return [ a for a in re.split(r'([A-Z][a-z]*\d*)', txt) if a ]

def upper_to_dashed(txt):
    return txt |> split_upper |> map$(.lower()) |> "-".join


def read_pillow_image(Image, np):
    def _read_pillow_image(filename):
        with Image.open(filename) as im:
            return np.asarray(im, dtype=np.uint8)

    return _read_pillow_image


def move_files(files, folder_orig, folder_dst):
    for file in files:
        move_file(file, folder_orig, folder_dst)

def move_file(filename, folder_orig, folder_dst):
    os.rename(os.path.join(folder_orig, filename), os.path.join(folder_dst, filename))
